services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: mongodb-dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: toor
      MONGO_INITDB_DATABASE: mydatabase
    volumes:
      - mongodb_data_dev:/data/db
      - mongodb_config_dev:/data/configdb
    networks:
      - app-network-dev
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API Service (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: backend-dev
    restart: unless-stopped
    ports:
      - "5050:5050"
    environment:
      PORT: 5050
      MONGO_URI: mongodb://root:toor@mongodb:27017/mydatabase?authSource=admin
      NODE_ENV: development
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network-dev

  # Frontend Web Service (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: frontend-dev
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:5050
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network-dev

# Named volumes for data persistence
volumes:
  mongodb_data_dev:
    driver: local
  mongodb_config_dev:
    driver: local

# Custom network for service communication
networks:
  app-network-dev:
    driver: bridge
